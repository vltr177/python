# Напишите скрипт на bash, который будет искать наибольший общий делитель (НОД, greatest common divisor, GCD) двух чисел. При запуске ваш скрипт не должен ничего писать на экран, а просто ждет ввода двух натуральных чисел через пробел
# (для этого можно использовать read и указать ему две переменные -- см. пример в видеофрагменте). После ввода чисел скрипт считает их НОД и выводит на экран сообщение "GCD is <посчитанное значение>", например, для чисел 15 и 25 это будет "GCD is 5".
# После этого скрипт опять входит в режим ожидания двух натуральных чисел. Если в какой-то момент работы пользователь ввел вместо этого пустую строку, то нужно написать на экран "bye" и закончить свою работу. 

# Вычисление НОД несложно реализовать с помощью алгоритма Евклида. Вам нужно написать функцию gcd, которая принимает на вход два аргумента (назовем их M и N). Если аргументы равны, то мы нашли НОД -- он равен M (или N), нужно выводить соответствующее сообщение на экран (см. выше).
# Иначе нужно сравнить аргументы между собой. Если M больше N, то запускаем ту же функцию gcd, но в качестве первого аргумента передаем (M-N), а в качестве второго N. Если же наоборот, M меньше N, то запускаем функцию gcd с первым аргументом M, а вторым (N-M).

# Пример корректной работы скрипта:
# ./script.sh
# 10 15
# GCD is 5
# 7 3 
# GCD is 1
# 
# bye

#!/bin/bash

gdc () # Two int arguments
{
	let m=$1
	let n=$2
	if [[ $m -eq $n ]]
	then
		echo "GCD is $m"
		return
	elif [[ $m -gt $n ]]
	then
		let x=$m-$n
		gdc $x $n
	elif [[ $m -lt $n ]]
	then
		let x=$n-$m
		gdc $m $x
	fi
}

while [[ True ]];do
	read a b
	if [[ -z $a ]]
	then
		echo "bye"
		break
	fi
	gdc a b
done
